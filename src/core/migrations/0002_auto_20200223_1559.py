# Generated by Django 2.2 on 2020-02-23 06:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='tagchain',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tagchain',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Tag'),
        ),
        migrations.AddField(
            model_name='tag',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tag',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Tag'),
        ),
        migrations.AddField(
            model_name='book',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bibtex',
            name='authors',
            field=models.ManyToManyField(through='core.AuthorOrder', to='core.Author'),
        ),
        migrations.AddField(
            model_name='bibtex',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Book'),
        ),
        migrations.AddField(
            model_name='bibtex',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bibtex',
            name='tags',
            field=models.ManyToManyField(blank=True, through='core.TagChain', to='core.Tag'),
        ),
        migrations.AddField(
            model_name='authororder',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Author'),
        ),
        migrations.AddField(
            model_name='authororder',
            name='bibtex',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Bibtex'),
        ),
        migrations.AddField(
            model_name='authororder',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='author',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='tagchain',
            unique_together={('bibtex', 'tag')},
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together={('name', 'parent')},
        ),
        migrations.AlterUniqueTogether(
            name='book',
            unique_together={('title', 'style')},
        ),
        migrations.AlterUniqueTogether(
            name='bibtex',
            unique_together={('title_en', 'book', 'pub_date', 'memo', 'page')},
        ),
        migrations.AlterUniqueTogether(
            name='authororder',
            unique_together={('bibtex', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='author',
            unique_together={('name_en', 'mail')},
        ),
    ]
